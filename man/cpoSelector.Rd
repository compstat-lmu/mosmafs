% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/selectorcpo.R
\name{cpoSelector}
\alias{cpoSelector}
\title{CPO that Selects Features}
\usage{
cpoSelector(selection, id, export = "export.default",
  affect.type = NULL, affect.index = integer(0),
  affect.names = character(0), affect.pattern = NULL,
  affect.invert = FALSE, affect.pattern.ignore.case = FALSE,
  affect.pattern.perl = FALSE, affect.pattern.fixed = FALSE)
}
\arguments{
\item{id}{[\code{character(1)} | \code{NULL}]\cr
ID to use for the CPO. if \code{NULL} is given, this defaults to
a name describing the action performed by the CPO, which can be retrieved using \code{\link{getCPOName}}.
The ID is used to identify the CPO in print messages,
and is prefixed to the CPO's hyperparameter names. This is can be used to avoid name clashes when composing
a CPO with another CPO or \code{\link[mlr:makeLearner]{Learner}} with hyperparameters with clashing names. Default is \code{NULL}.}

\item{export}{[\code{character}]\cr
Which hyperparameters to export. This can be a character vector naming the
hyperparameters to export (\emph{excluding} the ID), or a \code{character(1)} with one of the special values:
\tabular{ll}{
  \dQuote{export.all}            \tab  export all parameters                             \cr
  \dQuote{export.default}        \tab  exp. params that are exp. by def                  \cr
  \dQuote{export.set}            \tab  exp. params set in construct call                 \cr
  \dQuote{export.default.set}    \tab  intersection of \dQuote{default} and \dQuote{set} \cr
  \dQuote{export.unset}          \tab  params \emph{not} set in construct call           \cr
  \dQuote{export.default.unset}  \tab  isct. of \dQuote{default} and \dQuote{unset}      \cr
  \dQuote{export.all.plus}       \tab  not yet supported
}
Default is \dQuote{export.default}.}

\item{affect.type}{[\code{character} | \code{NULL}]\cr
Type of columns to affect. May be a subset of \dQuote{numeric}, \dQuote{factor}, \dQuote{ordered}, \dQuote{other},
or can be or \code{NULL} to match all columns. Default is \code{NULL}.}

\item{affect.index}{[\code{numeric}]\cr
Indices of feature columns to affect. The order of indices given is respected. Default is \code{integer(0)}.}

\item{affect.names}{[\code{character}]\cr
Feature names of feature columns to affect. The order of names given is respected. Default is \code{character(0)}.}

\item{affect.pattern}{[\code{character(1)} | \code{NULL}]\cr
\code{\link[base]{grep}} pattern to match feature names by. Default is \code{NULL} (no pattern matching)}

\item{affect.invert}{[\code{logical(1)}]\cr
Whether to affect all features \emph{not} matched by other \code{affect.*} parameters. Default is \code{FALSE}.}

\item{affect.pattern.ignore.case}{[\code{logical(1)}]\cr
Ignore case when matching features with \code{affect.pattern}; see \code{\link[base]{grep}}. Has no effect when
\code{affect.pattern} is \code{NULL}. Default is \code{FALSE}.}

\item{affect.pattern.perl}{[\code{logical(1)}]\cr
Use Perl-style regular expressions for \code{affect.pattern}; see \code{\link[base]{grep}}. Has no effect when
\code{affect.pattern} is \code{NULL}, or when \code{affect.pattern.fixed} is \code{TRUE}. Default is \code{FALSE}.}

\item{affect.pattern.fixed}{[\code{logical(1)}]\cr
Use fixed matching instead of regular expressions for \code{affect.pattern}; see \code{\link[base]{grep}}.
Has no effect when \code{affect.pattern} is \code{NULL}. Default is \code{FALSE}.}

\item{selector}{\code{\link{NULL}}}
}
\description{
CPO that Selects Features
}
